name: terraform-ci
on:
  workflow_call:
    inputs:
      upload_sarif:
        description: Upload SARIF results to Github. Available in public repos, or private/internal repos for enterprises with Github Advanced Security.
        type: boolean
        default: true
        required: false
      main_branch:
        description: Name of the main branch
        type: string
        default: main
        required: false
      checkov_skip_check:
        description: Skip a specific check_id. Can be comma separated list.
        type: string
        default: ""
        required: false
      checkov_output_quiet:
        description: Checkov output to display only failures
        type: string
        default: true
        required: false
      enable_submodules:
        description: Flag to enable GitHub submodules.
        type: boolean
        default: false
        required: false
      pre_init_hook:
        description: Shell commands to run before terraform init
        default: ""
        required: false
        type: string
      skip_precommit:
        description: Comma separated list of pre-commit check IDs to skip
        type: string
        default: ""
        required: false
      skip_tflint_warn:
        description: Do not fail for tflint warning
        type: boolean
        default: false
    secrets:
      TFE_TOKEN:
        description: Terraform Cloud Token
        required: false
env:
  TF_PLUGIN_CACHE_DIR: "/home/runner/.terraform.d/plugin-cache"
  TF_IN_AUTOMATION: "true"

jobs:
  fmt-validate:
    name: Format and Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: ${{ inputs.enable_submodules }}

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - run: mkdir -p "${TF_PLUGIN_CACHE_DIR}"
      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
          cli_config_credentials_token: ${{ secrets.TFE_TOKEN }}

      - name: Pre-init Hook
        run: ${{ inputs.pre_init_hook }}

      - name: Terraform init
        run: terraform init

      - name: Precommit Skips
        id: precommit_skips
        run: |
          SKIPS="tflint,terraform_tflint,markdown-link-check,terraform_docs,terraform_tfsec,checkov,terraform_checkov"
          if [ "${branch}" == "${main_branch}" ];then
              SKIPS="${SKIPS},no-commit-to-branch"
          fi
          if [ "${{inputs.skip_precommit}}" != "" ]; then
            SKIPS="${SKIPS},${{inputs.skip_precommit}}"
          fi

          echo "${SKIPS}"
          echo "skips=${SKIPS}" >> "${GITHUB_OUTPUT}"
        env:
          branch: ${{ github.ref_name }}
          main_branch: ${{ inputs.main_branch }}

      - name: precommit run hooks
        uses: pre-commit/action@v3.0.0
        env:
          SKIP: ${{ steps.precommit_skips.outputs.skips }}
        with:
          extra_args: --color=always --show-diff-on-failure --all-files
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: terraform -v

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: ${{ inputs.enable_submodules }}

      - run: mkdir -p "${TF_PLUGIN_CACHE_DIR}"
      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
          cli_config_credentials_token: ${{ secrets.TFE_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Cache TFlint
        uses: actions/cache@v3
        with:
          path: /home/runner/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v2
        with:
          tflint_version: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pre-commit
        uses: BSFishy/pip-action@v1
        with:
          packages: |
            pre-commit

      - name: Run TFLint
        id: tflint
        continue-on-error: true
        run: |
          # echo "testvar=haha" >> "$GITHUB_ENV"
          # pre-commit run terraform_tflint --all-files
          tflint "$(git diff --name-only main)"
          exit_code=$?
          echo "after tflint"
          echo "return_code=$exit_code" >> "$GITHUB_ENV"
          echo "testvar=haha" >> "$GITHUB_ENV"

      - name: Check status code
        if: success() || failure ()
        run: |
          echo "$GITHUB_ENV"
          echo "$testvar"
          tflint_return=${{ env.return_code }}
          echo $tflint_return
          # SKIP_WARN for skipping all warnings
          skip_warn=${{ inputs.skip_tflint_warn }}
          if [ $tflint_return -eq 0 ]; then # tflint no error
            echo "TFLint correctly returned failure: ${tflint_return}"
          elif [ $skip_warn ] && [ $tflint_return -eq 2 ]; then #tflint has warnings but no error, pass if skip_warn
            echo "TFLint warnings found and skipped."
          else
            echo "TFLint returned ${tflint_return}, expected '0'. Failing..."
            exit 1
          fi

          # Exit codes: 0 is pass 1 is error 2 is warning

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: ${{ inputs.enable_submodules }}

      - name: Run tfsec with reviewdog output on the PR
        uses: reviewdog/action-tfsec@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          flags: -tee
        if: inputs.upload_sarif != true

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          output_format: sarif
          quiet: ${{ inputs.checkov_output_quiet }}
          skip_check : ${{ inputs.checkov_skip_check }}
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
        if: inputs.upload_sarif

      - name: Run tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.0
        with:
          sarif_file: tfsec.sarif
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: tfsec.sarif
        if: inputs.upload_sarif
